from __future__ import print_function
import numpy as np
import pandas as pd
import csv
import string
import statsmodels.api as sm
import matplotlib.pyplot as plt
import pymc as pm
import seaborn as sns

df = pd.io.stata.read_stata("/home/pawel-dell/learning/datasets/regression/gelman_reg/child.iq/kidiq.dta")
#print(df.head())

def run_reg(data, outcome, predictors, mode='ols', ps = 'n'):

  ttt = data.ix[:, outcome+predictors]

  if mode=='logit':

    logit = sm.Logit(tt.ix[:,outcome], sm.add_constant(ttt.ix[:, predictors]) )
    res= logit.fit()
    if ps=='y':
       print(res.summary())

  elif mode =='ols':

    ols = sm.OLS(ttt.ix[:,outcome], sm.add_constant(ttt.ix[:, predictors]) )
    res= ols.fit()
    if ps=='y':
       print(res.summary())

  return ttt, res

def plot_res(data, outcome, predictor, model):

   x = np.linspace(int(np.min(data.ix[:,predictor])-3), int(np.max(data.ix[:,predictor])+3), 1000)
   plt.scatter(data.ix[:,predictor],data.ix[:,outcome])
   plt.plot(x, model.params[0] + x*model.params[1])
   plt.xlabel(p)
   plt.ylabel(o)
   plt.show()

def m_inf(df, it=5000):

    lines = pm.glm.glm("kid_score ~ mom_iq", df, family = pm.glm.families.Normal())
    model = pm.Model([lines])
    #trace = pm.sample(it, step,start, random_seed=42, progressbar=True)
    mcmc = pm.MCMC(model)

    return mcmc


# single predictor
p=['mom_iq']
o=['kid_score']
#tt, m =run_reg(df,o,p,'ols','y')
#plot_res(df,o,p,m)
